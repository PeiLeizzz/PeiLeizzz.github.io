(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{543:function(v,_,t){"use strict";t.r(_);var r=t(4),i=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"第五章-系统分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第五章-系统分析"}},[v._v("#")]),v._v(" 第五章 系统分析")]),v._v(" "),t("p",[v._v("概念：理解和发现用户的要求，也称为"),t("strong",[v._v("需求分析")])]),v._v(" "),t("p",[t("strong",[v._v("任务")]),v._v("：识别需求和表达需求，调查和分析"),t("strong",[v._v("业务流程")]),v._v("，建立系统的"),t("strong",[v._v("逻辑模型")])]),v._v(" "),t("p",[v._v("系统调查方法：资料收集、访谈、实地观察、问卷调查")]),v._v(" "),t("p",[v._v("需求引导方法：")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("原型法")]),v._v("：利用快速开发工具，根据用户的初步需求，构造出信息系统的初步原型")]),v._v(" "),t("p",[v._v("能准确的反应用户的需求，但需要额外的工作量")])]),v._v(" "),t("li",[t("p",[v._v("联合应用开发（JAD）会议")])]),v._v(" "),t("li",[t("p",[v._v("观摩法")])])]),v._v(" "),t("h3",{attrs:{id:"需求分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#需求分析"}},[v._v("#")]),v._v(" 需求分析")]),v._v(" "),t("p",[v._v("类型：业务性需求和技术性需求")]),v._v(" "),t("p",[t("strong",[v._v("方法：")])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("面向过程的结构化方法（自顶向下、逐层分解）")])]),v._v(" "),t("li",[t("strong",[v._v("面向数据的信息工程方法（数据驱动）")])]),v._v(" "),t("li",[t("strong",[v._v("面向对象方法（对象驱动、UML）")])])]),v._v(" "),t("h3",{attrs:{id:"系统分析建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统分析建模"}},[v._v("#")]),v._v(" 系统分析建模")]),v._v(" "),t("p",[v._v("方法：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("流程建模")]),v._v(" "),t("ul",[t("li",[v._v("业务流程（业务流程图、"),t("strong",[v._v("UML 活动图")]),v._v("）")]),v._v(" "),t("li",[v._v("数据处理流程（数据流图）")])])]),v._v(" "),t("li",[t("strong",[v._v("用例建模")]),v._v(" "),t("ul",[t("li",[v._v("信息系统功能建模（"),t("strong",[v._v("UML 用例图")]),v._v("）")])])]),v._v(" "),t("li",[t("strong",[v._v("领域对象建模")]),v._v(" "),t("ul",[t("li",[v._v("领域对象模型（"),t("strong",[v._v("UML 类图、UML 状态图")]),v._v("）")])])])]),v._v(" "),t("h2",{attrs:{id:"第七章-用例建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第七章-用例建模"}},[v._v("#")]),v._v(" 第七章 用例建模")]),v._v(" "),t("h3",{attrs:{id:"基于用例的需求分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于用例的需求分析"}},[v._v("#")]),v._v(" 基于用例的需求分析")]),v._v(" "),t("p",[v._v("用例分析是站在"),t("strong",[v._v("最终用户的角度")]),v._v("看待系统及其特性，结合"),t("strong",[v._v("面向对象方法")])]),v._v(" "),t("p",[t("strong",[v._v("用例")]),v._v("：是对于"),t("strong",[v._v("一组动作序列的描述")]),v._v("，系统执行这些动作会对特定的参与者产生"),t("strong",[v._v("可观测的、有价值的")]),v._v("结果。用于描述功能性的需求，"),t("strong",[v._v("每个用例至少和一个参与者相关")]),v._v("。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115714.png",alt:"image-20210524203835120"}})]),v._v(" "),t("p",[t("strong",[v._v("参与者")]),v._v("：系统之外与系统进行"),t("strong",[v._v("直接交互")]),v._v("的任何事物（使用系统的个人、系统所连接的外部硬件、与该系统进行通信的其他信息系统）")]),v._v(" "),t("p",[t("strong",[v._v("外部实体")]),v._v("：数据的来源和去向，提供数据的人员不一定会执行系统的功能")]),v._v(" "),t("p",[t("strong",[v._v("参与者的泛化")]),v._v("：抽取一些角色之间的共性，作为父角色")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115712.png",alt:"image-20210524204038467"}})]),v._v(" "),t("p",[v._v("业务用例：具体业务相关，如“上门维修”")]),v._v(" "),t("p",[v._v("系统用例：有信息处理的那部分功能，如“填写派工单”")]),v._v(" "),t("h3",{attrs:{id:"用例的描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用例的描述"}},[v._v("#")]),v._v(" 用例的描述")]),v._v(" "),t("p",[t("strong",[v._v("用例规格说明")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("用例名称")]),v._v(" "),t("li",[v._v("主要参与者 / 次要参与者")]),v._v(" "),t("li",[v._v("简要描述")]),v._v(" "),t("li",[v._v("前置条件：如预定图书前需要登录")]),v._v(" "),t("li",[v._v("后置条件：如预定图书后图书状态改变")]),v._v(" "),t("li",[v._v("主事件流")]),v._v(" "),t("li",[v._v("备选事件流")]),v._v(" "),t("li",[v._v("特殊要求 / 非功能性需求")]),v._v(" "),t("li",[v._v("发生频率")]),v._v(" "),t("li",[v._v("业务规则")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115709.png",alt:"image-20210524204828642"}})]),v._v(" "),t("p",[t("strong",[v._v("UML 顺序图")]),v._v("：更直观地表现出参与者和系统之间的交互")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115705.png",alt:"image-20210524204914752"}})]),v._v(" "),t("h3",{attrs:{id:"用例之间的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用例之间的关系"}},[v._v("#")]),v._v(" 用例之间的关系")]),v._v(" "),t("p",[t("strong",[v._v("拓展")]),v._v("和"),t("strong",[v._v("包含")]),v._v("关系就是用例模型中消除冗余的一种手段。")]),v._v(" "),t("p",[v._v("用例关系：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("包含关系：<<include>> 虚线，"),t("strong",[v._v("主用例指向子用例")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115700.png",alt:"image-20210524205302029"}})])]),v._v(" "),t("li",[t("p",[v._v("拓展关系：<<extend>> 虚线，"),t("strong",[v._v("子用例指向主用例")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115657.png",alt:"image-20210524205311918"}})])]),v._v(" "),t("li",[t("p",[v._v("泛化关系：父用例、子用例（"),t("strong",[v._v("子用例是相互独立而完整的")]),v._v("）")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115656.png",alt:"image-20210524205327976"}})])])]),v._v(" "),t("p",[t("strong",[v._v("用例图元素")]),v._v("：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115654.png",alt:"image-20210524205421706"}})]),v._v(" "),t("h2",{attrs:{id:"第八章-领域对象建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第八章-领域对象建模"}},[v._v("#")]),v._v(" 第八章 领域对象建模")]),v._v(" "),t("p",[v._v("领域对象建模解决业务管理对象到信息系统"),t("strong",[v._v("逻辑结构")]),v._v("（软件结构模型和数据库结构模型）的映射。")]),v._v(" "),t("h3",{attrs:{id:"面向对象方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象方法"}},[v._v("#")]),v._v(" 面向对象方法")]),v._v(" "),t("p",[t("strong",[v._v("对象")]),v._v("：一些属性及专用服务的封装体，是问题域中一些事物的抽象")]),v._v(" "),t("p",[t("strong",[v._v("属性")]),v._v("：类的特征或特性")]),v._v(" "),t("p",[t("strong",[v._v("方法")]),v._v("：对象的行为")]),v._v(" "),t("p",[t("strong",[v._v("类")]),v._v("：具有相同属性和服务的一组对象的抽象概念")]),v._v(" "),t("p",[t("strong",[v._v("实例")]),v._v("：一个具体的对象")]),v._v(" "),t("blockquote",[t("p",[v._v("类是静态的，对象是动态的")])]),v._v(" "),t("p",[t("strong",[v._v("抽象类")]),v._v("：表征在对问题领域进行分析、设计的抽象概念")]),v._v(" "),t("p",[t("strong",[v._v("接口")]),v._v("：抽象类的变体，是一些"),t("strong",[v._v("方法的集合")]),v._v("，但所有的方法都是抽象的")]),v._v(" "),t("p",[t("strong",[v._v("封装")]),v._v("：信息隐藏，保证软件部件具有较好的模块性（黑箱）。对象是一个更高级别的封装体，将数据和服务封装于一个内在的整体，向外提供接口，隐藏内部实现")]),v._v(" "),t("p",[t("strong",[v._v("消息")]),v._v("：对象发出的服务请求（对象间的交互信息）")]),v._v(" "),t("p",[t("strong",[v._v("继承")]),v._v("：特殊类的对象拥有其一般类的全部属性与服务，这个过程称为"),t("strong",[v._v("泛化")])]),v._v(" "),t("p",[t("strong",[v._v("多态")]),v._v("：相同的操作可作用于多种类型的对象并获得不同的结果（建立在继承机制之上）")]),v._v(" "),t("ul",[t("li",[v._v("覆盖：子类对父类的方法进行重写，"),t("strong",[v._v("运行时")]),v._v("多态、"),t("strong",[v._v("动态")]),v._v("多态")]),v._v(" "),t("li",[v._v("重载：一个类中定义多个名称相同、参数类型不同的方法，"),t("strong",[v._v("编译时")]),v._v("多态、"),t("strong",[v._v("静态")]),v._v("多态")])]),v._v(" "),t("p",[v._v("类之间的联系方式：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("继承 / 泛化")])]),v._v(" "),t("li",[t("strong",[v._v("实现")])])]),v._v(" "),t("p",[v._v("对象关系：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("关联")]),v._v("：静态联系，长期联系，比如整体和部分关系（对象引用）\n"),t("ul",[t("li",[t("strong",[v._v("聚合")]),v._v("：部分可以脱离于整体，有各自的生命周期（比如公司和员工）")]),v._v(" "),t("li",[t("strong",[v._v("组合")]),v._v("：部分不能脱离整体，生命周期一致（比如人和人的大脑）")])])]),v._v(" "),t("li",[t("strong",[v._v("依赖")]),v._v("：动态联系，运行时联系，短期联系（函数中引用、函数返回值）")])]),v._v(" "),t("blockquote",[t("p",[v._v("耦合性：依赖 < 关联 < 聚合 < 组合 < 泛化")])]),v._v(" "),t("p",[t("strong",[v._v("重用")]),v._v("：对象具有封装性和信息隐蔽等特性，容易实现软件重用")]),v._v(" "),t("p",[v._v("面向对象方法的优势：")]),v._v(" "),t("ul",[t("li",[v._v("更接近人类的思维方式")]),v._v(" "),t("li",[v._v("生命周期各阶段过渡平滑")]),v._v(" "),t("li",[v._v("维护更加容易")]),v._v(" "),t("li",[v._v("更加稳定")]),v._v(" "),t("li",[v._v("与数据模型一致（ER 图中的实体）")])]),v._v(" "),t("h3",{attrs:{id:"识别领域对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#识别领域对象"}},[v._v("#")]),v._v(" 识别领域对象")]),v._v(" "),t("p",[v._v("采用的分析技术：")]),v._v(" "),t("ul",[t("li",[v._v("类图：对象及其关系，描述系统的"),t("strong",[v._v("静态")]),v._v("结构")]),v._v(" "),t("li",[v._v("状态图：对象的状态及转换，用于描述基于"),t("strong",[v._v("事件响应")]),v._v("的对象"),t("strong",[v._v("动态")]),v._v("行为和状态之间的关系")])]),v._v(" "),t("p",[t("strong",[v._v("领域对象")]),v._v("：问题域中有意义的概念类，是现实系统中的事物或事件")]),v._v(" "),t("h3",{attrs:{id:"对象的关联"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的关联"}},[v._v("#")]),v._v(" 对象的关联")]),v._v(" "),t("p",[v._v("关联表示不同类的对象之间的静态关系，它在一段时间内将多个类的实例连接在一起。（has a）")]),v._v(" "),t("p",[t("strong",[v._v("描述关联的要素")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("关联名称：二元，反映关系的目的")]),v._v(" "),t("li",[v._v("对象在关联中的角色")]),v._v(" "),t("li",[v._v("多重性：一对一、一对多、多对多")]),v._v(" "),t("li",[v._v("导向性：单向访问，通常是源对象存储了对目标对象的一些引用")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115651.png",alt:"image-20210524212312319"}})]),v._v(" "),t("p",[t("strong",[v._v("整体-部分")]),v._v("关联（a is a part of b）：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("对象 a 是对象 b 的一个组成部分，描述组装关系，如机器和零件、班级和学生）")])]),v._v(" "),t("li",[t("p",[v._v("也称为"),t("strong",[v._v("聚集")]),v._v("，UML 中使用连接线和菱形表达，菱形一端的对象是整体对象")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("组合聚集（组成）")]),v._v("：实心菱形，具有很强的归属关系，在特定时刻"),t("strong",[v._v("部分只能是一个组合对象的成员")]),v._v("，整体端的重数不会超过 1（部分无法被多个整体对象共享）")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115649.png",alt:"image-20210524212711728"}})])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("共享聚集（聚集）")]),v._v("：空心菱形，部分可能同时属于多个整体对象")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115647.png",alt:"image-20210524212803910"}})])])])])]),v._v(" "),t("h3",{attrs:{id:"对象的泛化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的泛化"}},[v._v("#")]),v._v(" 对象的泛化")]),v._v(" "),t("p",[v._v("泛化是在多个概念之间识别共性，定义超类和子类关系的活动")]),v._v(" "),t("p",[t("strong",[v._v("一般-特殊")]),v._v("结构（is a kind of）：类 A 具有类 B 的全部属性和行为，而且具有自己特有的某些属性和服务")]),v._v(" "),t("blockquote",[t("p",[v._v("不要将一个对象的状态变化设计为多个子类，除非对象的"),t("strong",[v._v("多数行为")]),v._v("是由状态来决定")])]),v._v(" "),t("h3",{attrs:{id:"类图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[v._v("#")]),v._v(" 类图")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115646.png",alt:"image-20210524213516733"}})]),v._v(" "),t("p",[t("strong",[v._v("对象图")]),v._v("：对类图的补充说明")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115644.png",alt:"image-20210524213722045"}})]),v._v(" "),t("h3",{attrs:{id:"对象状态建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象状态建模"}},[v._v("#")]),v._v(" 对象状态建模")]),v._v(" "),t("ul",[t("li",[v._v("静态模型：反应系统的结构")]),v._v(" "),t("li",[v._v("动态模型：反应系统的信息处理过程\n"),t("ul",[t("li",[v._v("状态图")]),v._v(" "),t("li",[v._v("交互图（顺序图、通信图）")])])])]),v._v(" "),t("p",[t("strong",[v._v("状态图")]),v._v("：")]),v._v(" "),t("p",[v._v("元素：状态（终态、初态、复合状态）、转换、内部活动")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210525115640.png",alt:"image-20210524213928965"}})]),v._v(" "),t("h2",{attrs:{id:"第九章-系统设计概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第九章-系统设计概述"}},[v._v("#")]),v._v(" 第九章 系统设计概述")]),v._v(" "),t("p",[v._v("系统设计：逻辑模型 -> 实际系统；针对需求，进行计算机信息系统的"),t("strong",[v._v("物理模型")]),v._v("设计（怎么做）")]),v._v(" "),t("blockquote",[t("p",[v._v("一个逻辑模型，可以提出多个物理模型")])]),v._v(" "),t("p",[v._v("基本设计方法：模块化、层次化、封装、契约")]),v._v(" "),t("p",[v._v("系统设计的内容：")]),v._v(" "),t("ul",[t("li",[v._v("总体设计：设计软件的体系结构（架构）、软件结构、系统对外接口和服务")]),v._v(" "),t("li",[v._v("详细设计：具体细节")])]),v._v(" "),t("p",[t("strong",[v._v("软件结构")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("基于模块封装")]),v._v(" "),t("ul",[t("li",[v._v("自顶向下、逐层分解（结构化设计）")]),v._v(" "),t("li",[v._v("主要模型：模块结构图（功能结构图）")])])]),v._v(" "),t("li",[t("p",[v._v("基于对象封装")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("强调面向对象")])]),v._v(" "),t("li",[t("p",[v._v("主要模型：类图")]),v._v(" "),t("blockquote",[t("p",[v._v("类的方法本质上也是模块封装")])])])])]),v._v(" "),t("li",[t("p",[v._v("基于服务封装：")]),v._v(" "),t("ul",[t("li",[v._v("面向服务的架构（SOA）：操作、服务、业务流程")]),v._v(" "),t("li",[v._v("主要模型：构件图（底层基于类来实现）")])])])]),v._v(" "),t("p",[t("strong",[v._v("软件设计的两类模型")])]),v._v(" "),t("ul",[t("li",[v._v("静态模型\n"),t("ul",[t("li",[v._v("主要表示软件结构，即组成元素及其关系。一种是开发态的源程序结构，另一种是运行态的构件结构。")]),v._v(" "),t("li",[v._v("模块结构图（结构化方法）、类图（面向对象方法）、构件图（面向服务的架构）")])])]),v._v(" "),t("li",[v._v("动态模型\n"),t("ul",[t("li",[v._v("主要表示软件执行动作的步骤和流程控制")]),v._v(" "),t("li",[v._v("程序结构图（结构化方法）、顺序图（面向对象方法）")])])])]),v._v(" "),t("h2",{attrs:{id:"第十章-系统总体设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第十章-系统总体设计"}},[v._v("#")]),v._v(" 第十章 系统总体设计")]),v._v(" "),t("h3",{attrs:{id:"软件架构的设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件架构的设计"}},[v._v("#")]),v._v(" 软件架构的设计")]),v._v(" "),t("p",[t("strong",[v._v("架构")]),v._v("：系统最高层的设计方案。架构包含系统的一组基本结构，每种结构都有各种类型的部件及其关系构成，架构描述了这些部件的组合、相互调用参照、通信以及其他动态交互。")]),v._v(" "),t("p",[t("strong",[v._v("软件架构")]),v._v("：一个应用程序或计算机系统的软件架构是一个或一组结构，它包含组成系统的软件元素、这些元素对外可见的性质以及它们之间的关系。对外可见的性质指软件元素能够提供的服务、性能特征、错误处理、共享资源的用法等。")]),v._v(" "),t("p",[t("strong",[v._v("软件架构模式")]),v._v("：可重复使用的软件结构风格")]),v._v(" "),t("h4",{attrs:{id:"多层应用架构模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多层应用架构模式"}},[v._v("#")]),v._v(" 多层应用架构模式")]),v._v(" "),t("p",[t("strong",[v._v("分层")]),v._v("：将整个任务划分为不同级别（横向、纵向）")]),v._v(" "),t("p",[v._v("三层架构：UI（表示层）、BLL（业务逻辑层）、DAL（数据库访问层）")]),v._v(" "),t("blockquote",[t("p",[v._v("MVC 架构：View -> Controller -> Model")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527205923.png",alt:"image-20210527205922937"}})])]),v._v(" "),t("p",[v._v("五层架构：表现层、控制层/中介层、领域层、数据映射层、数据访问层")]),v._v(" "),t("blockquote",[t("p",[v._v("SSM 五层：View -> Controller -> Service -> Entity -> DAO")])]),v._v(" "),t("p",[v._v("多层体系结构的优势：安全性提高、可靠性和响应速度提高、重用性和可维护性提高、并行开发能力提高")]),v._v(" "),t("h4",{attrs:{id:"软件框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件框架"}},[v._v("#")]),v._v(" 软件框架")]),v._v(" "),t("p",[t("strong",[v._v("软件框架")]),v._v("：对整个或部分系统可重用的"),t("strong",[v._v("设计和实现")])]),v._v(" "),t("blockquote",[t("p",[v._v("SSH: Struts, Spring, Hibernate")]),v._v(" "),t("p",[v._v("SSM: Spring, SpringMVC, Mybatis")])]),v._v(" "),t("h3",{attrs:{id:"高层结构设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高层结构设计"}},[v._v("#")]),v._v(" 高层结构设计")]),v._v(" "),t("p",[v._v("高层结构讨论系统比较大的组成部件（包、构件、子系统等）及其接口设计")]),v._v(" "),t("p",[t("strong",[v._v("包")]),v._v("：逻辑分组的手段，将相关成分聚在一起，以构成更高层的组织单元。最常用的方法是将类以包为单位进行分组，一个包可以包含其他的包。")]),v._v(" "),t("blockquote",[t("p",[v._v("在 Java 中，包还指代了物理的组织手段")])]),v._v(" "),t("p",[t("strong",[v._v("分包原则")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("共同封闭原则")]),v._v("：一个包中的各个类应该是由于相似的原则而改变，即将一组指责相似、但以不同方式实现的类归为一个包中。")]),v._v(" "),t("li",[t("strong",[v._v("共同复用原则")]),v._v("：一个包中的各个类应该一起被复用，复用其中一个可能需要同时考虑同一个包中的其他协作类，通常和业务功能相关。")])]),v._v(" "),t("p",[t("strong",[v._v("包图")]),v._v("：描述包及其依赖关系")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527210346.png",alt:"image-20210527210346286"}})]),v._v(" "),t("p",[t("strong",[v._v("子系统")]),v._v("：当按照相对完整和独立的业务功能或管理职能组织包，并对这样的包进行封装后，一个高层的、具有特定功能的、可以运行的独立构件就产生了，称为子系统。子系统对外可以提供有限的接口。")]),v._v(" "),t("p",[t("strong",[v._v("UML 构件图")]),v._v("：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527210538.png",alt:"image-20210527210538197"}})]),v._v(" "),t("p",[t("strong",[v._v("接口")]),v._v("：两个不同系统（或子程序）交接并通过它彼此作用的部分。")]),v._v(" "),t("blockquote",[t("p",[v._v("子系统和包的差异：")]),v._v(" "),t("ul",[t("li",[v._v("子系统是可以直接运行的，具有"),t("strong",[v._v("物理意义")])]),v._v(" "),t("li",[v._v("包不提供行为，只是一种容纳各种其他模型元素的容器，具有"),t("strong",[v._v("逻辑意义")])])])]),v._v(" "),t("p",[t("strong",[v._v("子系统的关系")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("数据接口：定义可以理解的数据格式和数据文件，子系统之间采用数据文件进行通信")]),v._v(" "),t("li",[v._v("服务接口：定义可以理解的软件服务，子系统之间采用发送服务请求和响应进行通信")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527211318.png",alt:"image-20210527211318778"}})]),v._v(" "),t("p",[t("strong",[v._v("构件")]),v._v("：系统中实际存在的可更换部分，实现了特定的功能，符合一套接口标准并实现一组接口。构件是可复用的软件组成成分，可被用来构造其他软件。")]),v._v(" "),t("blockquote",[t("p",[v._v("子系统和构件的差异：")]),v._v(" "),t("ul",[t("li",[v._v("子系统是一个系统，是具有特定功能的整体，可以直接使用，不会被复用")]),v._v(" "),t("li",[v._v("构件只是构成系统的元素，不具备单独使用的能力，用于复用")])])]),v._v(" "),t("h3",{attrs:{id:"面向对象设计方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象设计方法"}},[v._v("#")]),v._v(" 面向对象设计方法")]),v._v(" "),t("p",[v._v("三层分层模式：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("分析模型的"),t("strong",[v._v("领域类")]),v._v("导出设计阶段中的"),t("strong",[v._v("实体类")])])]),v._v(" "),t("li",[t("p",[v._v("增加"),t("strong",[v._v("边界类")]),v._v("和"),t("strong",[v._v("控制类")]),v._v("完成程序的交互和控制")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("UML 构造型")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527211914.png",alt:"image-20210527211914496"}})])]),v._v(" "),t("li",[t("p",[v._v("Rose 图符")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527211940.png",alt:"image-20210527211940019"}})])])]),v._v(" "),t("p",[t("strong",[v._v("边界类")]),v._v("：完成系统与其参与者之间的交互（接收来自用户和外部系统的信息与请求；将信息与请求提交给用户和外部系统）")]),v._v(" "),t("p",[v._v("每个边界类至少应该与一个参与者相关，根据用例图，每个参与者与一个用例交互，必定导出一个边界类。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527212223.png",alt:"image-20210527212223697"}})]),v._v(" "),t("p",[t("strong",[v._v("实体类")]),v._v("：来源于领域模型的类，是一个软件对象，表达了领域对象的信息，以及具有与它所表示的信息有关的操作。")]),v._v(" "),t("p",[v._v("实体类反映的信息需要在系统中进行处理，并需要进行"),t("strong",[v._v("持久化存储")]),v._v("。")]),v._v(" "),t("blockquote",[t("p",[v._v("边界类仅负责数据的输入和输出，不承担业务逻辑；通过与实体类的交互，获得有关数据处理的结果")])]),v._v(" "),t("p",[t("strong",[v._v("控制类")]),v._v("：控制类代表协调、排序、事务处理以及对其他对象的控制，经常用于封装与某个具体用例有关的"),t("strong",[v._v("控制流")]),v._v("。")]),v._v(" "),t("blockquote",[t("p",[v._v("控制类不与参与者交互，也不封装长效持久的信息")])]),v._v(" "),t("p",[t("strong",[v._v("职责")]),v._v("：类的方法是对象应该执行的操作，也称为对象的职责和义务。")]),v._v(" "),t("p",[v._v("职责类型：行为型（对象本身的方法）、了解型（对象应掌握的信息，set/get 方法，关联对象）")]),v._v(" "),t("p",[v._v("职责分配方法：")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("交互图")]),v._v("：将消息映射为类的操作，并在实现时转化为类的方法")]),v._v(" "),t("p",[v._v("交互图类型：顺序图、交互概览图、通信图、计时图")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527213009.png",alt:"image-20210527213009369"}})])]),v._v(" "),t("li",[t("p",[v._v("CRC（类-职责-协作）卡片法")])])]),v._v(" "),t("p",[t("strong",[v._v("顺序图")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("元素：参与者、对象、生命线、激活框、消息、控制框架（分支、循环、可选）")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527213243.png",alt:"image-20210527213243265"}})])]),v._v(" "),t("li",[t("p",[v._v("参与者、对象表示方法")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527213328.png",alt:"image-20210527213328700"}})])]),v._v(" "),t("li",[t("p",[v._v("消息：发送消息——实线，响应消息——虚线")])]),v._v(" "),t("li",[t("p",[v._v("控制流：loop alt 等")]),v._v(" "),t("p",[t("strong",[v._v("复杂控制逻辑由活动图描述更清晰，但活动图不能标识消息")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527213550.png",alt:"image-20210527213550388"}})])])]),v._v(" "),t("p",[t("strong",[v._v("协作图")]),v._v("：与顺序图等价")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527213727.png",alt:"image-20210527213727801"}})]),v._v(" "),t("p",[t("strong",[v._v("消息的设计")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("return := message(parameter: parameterType): returnType")]),v._v(" "),t("p",[v._v("如 reader := getReader(cardID: String)")])])]),v._v(" "),t("p",[v._v("特殊的消息：对象创建、属性存取")]),v._v(" "),t("p",[t("strong",[v._v("设计类的关系")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("泛化（类）——继承、多态")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527214203.png",alt:"image-20210527214203039"}})])]),v._v(" "),t("li",[t("p",[v._v("关联（对象）")]),v._v(" "),t("p",[v._v("导航性：单向关联、双向关联")]),v._v(" "),t("p",[v._v("关联重数：一对一、一对多、多对多")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527214250.png",alt:"image-20210527214250722"}})])]),v._v(" "),t("li",[t("p",[v._v("实现（类）")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527214355.png",alt:"image-20210527214355349"}})])]),v._v(" "),t("li",[t("p",[v._v("依赖（对象）——一个类的对象实例使用了另一个类的属性和方法")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527214416.png",alt:"image-20210527214416451"}})])])]),v._v(" "),t("h3",{attrs:{id:"设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[v._v("#")]),v._v(" 设计原则")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("总的原则")])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("抽象和复用（封装、信息隐藏）")])]),v._v(" "),t("li",[t("strong",[v._v("松耦合")])])])]),v._v(" "),t("li",[t("p",[v._v("面向功能模块")]),v._v(" "),t("ul",[t("li",[v._v("避免使用全局数据")]),v._v(" "),t("li",[v._v("参数传递尽量少")]),v._v(" "),t("li",[v._v("模块内语句一般为 50-100 行")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("面向对象")])]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("单一职责")]),v._v("：SRP，即内聚性原则")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("开放封闭")]),v._v("：OCP")]),v._v(" "),t("p",[v._v("软件实体（类、模块、函数）应该是"),t("strong",[v._v("可扩展")]),v._v("的，又是"),t("strong",[v._v("不可修改")]),v._v("的")]),v._v(" "),t("p",[v._v("即"),t("strong",[v._v("对于扩展开放，对于更改封闭")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("里氏替换")]),v._v("：LSP")]),v._v(" "),t("p",[t("strong",[v._v("子类型必须能够替换掉它们的基类型")])]),v._v(" "),t("p",[v._v("是多态顺利实现的保证：增加或修改任何一个子类型，基类型不用修改；基类的使用者通过多态得到扩展或修改过的行为")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("依赖倒置")]),v._v("：DIP")]),v._v(" "),t("p",[v._v("高层模块不应该依赖于底层模块，二者都应该依赖于抽象")]),v._v(" "),t("p",[v._v("抽象不应该依赖于细节，细节应该依赖于抽象")]),v._v(" "),t("p",[v._v("让高层需要的服务声明为抽象接口，高层使用这些接口，底层模块实现这些接口")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/peilei722/picture/raw/master/img/20210527215323.png",alt:"image-20210527215323228"}})])])])]),v._v(" "),t("li",[t("p",[v._v("面向服务")])])]),v._v(" "),t("h2",{attrs:{id:"第十一章-系统详细设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第十一章-系统详细设计"}},[v._v("#")]),v._v(" 第十一章 系统详细设计")]),v._v(" "),t("h3",{attrs:{id:"人机交互设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#人机交互设计"}},[v._v("#")]),v._v(" 人机交互设计")]),v._v(" "),t("p",[t("strong",[v._v("目标")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("降低学习时间")]),v._v(" "),t("li",[v._v("提高执行速度")]),v._v(" "),t("li",[v._v("减少用户出错率")]),v._v(" "),t("li",[v._v("提高记忆保持能力")]),v._v(" "),t("li",[v._v("提高主观满意度")])]),v._v(" "),t("blockquote",[t("p",[v._v("图形用户界面（GUI）是人机交互的主流")])])])}),[],!1,null,null,null);_.default=i.exports}}]);