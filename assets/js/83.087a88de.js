(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{573:function(s,t,n){"use strict";n.r(t);var a=n(4),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"入门"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#入门"}},[s._v("#")]),s._v(" 入门")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("运行："),n("code",[s._v("go run *.go")])])]),s._v(" "),n("li",[n("p",[s._v("编译："),n("code",[s._v("go build *.go")])])]),s._v(" "),n("li",[n("p",[s._v("自动修改依赖："),n("code",[s._v("go mod tidy")])])]),s._v(" "),n("li",[n("p",[s._v("包："),n("code",[s._v("package main // 表示该文件属于 main 包")])])]),s._v(" "),n("li",[n("p",[s._v("导入包："),n("code",[s._v('import "fmt"')])])]),s._v(" "),n("li",[n("p",[s._v("main 包定义了一个独立可执行的程序，而不是一个库")])]),s._v(" "),n("li",[n("p",[s._v("编译器会把特定符号后的换行符转换为分号，所以函数的左括号不能独占一行，"),n("code",[s._v("x+y")]),s._v(" 只能在 + 后换行（以 + 结尾不会被插入分号）")])]),s._v(" "),n("li",[n("p",[s._v("变量声明（会自动初始化）："),n("code",[s._v("var s string")])])]),s._v(" "),n("li",[n("p",[s._v("短变量声明："),n("code",[s._v("i := 1")]),s._v(" 根据变量的初始值为变量赋予适当的类型")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("s "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最简洁，但只能用在函数内部，不能用于包变量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 依赖默认初始化机制")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("上述形式等价")])]),s._v(" "),n("li",[n("p",[s._v("自增：只能放在变量后面 "),n("code",[s._v("i++")])])]),s._v(" "),n("li",[n("p",[s._v("for 循环：")]),s._v(" "),n("p",[s._v("第一种形式")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" initialization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" post "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每个部分都可以省略，如果只剩 condition，分号也可以省略")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" condition "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无限循环")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("第二种形式")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// os.Args[0] 是命令本身的名字")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不能用 tmp 等代替 _，因为 go 不允许使用无用的局部变量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// range 产生一对值：索引和元素")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("数组字符串拼接："),n("code",[s._v('strings.Join(os.Args[1:], " ")')]),s._v(" 类似 Python 中的 "),n("code",[s._v("' '.join(arr[1:])")])])]),s._v(" "),n("li",[n("p",[s._v("字符串分割："),n("code",[s._v("strings.Split()")])])]),s._v(" "),n("li",[n("p",[s._v("创建 map "),n("code",[s._v("make(map[string]int)")]),s._v("，map 的迭代顺序是随机的")])]),s._v(" "),n("li",[n("p",[s._v("读取标准输入并将其拆分为行或单词："),n("code",[s._v("input := bufio.NewScanner(os.Stdin)")])])]),s._v(" "),n("li",[n("p",[s._v("遍历 input：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Scan")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每次读入一行并移除末尾的换行符，读到末尾时返回 false")]),s._v("\n  fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("向标准错误流打印错误信息："),n("code",[s._v('fmt.Fprintf(os.Stderr, "dup2: %v\\n", err)')])])]),s._v(" "),n("li",[n("p",[s._v("创建 channel "),n("code",[s._v("ch := make(chan string)")])])]),s._v(" "),n("li",[n("p",[s._v("创建 goroutine "),n("code",[s._v("go")])])]),s._v(" "),n("li",[n("p",[s._v("当一个goroutine尝试在一个channel上做send或者receive操作时，这个goroutine会阻塞在调用处，直到另一个goroutine从这个channel里接收或者写入值，这样两个goroutine才会继续执行channel操作之后的逻辑。")])]),s._v(" "),n("li",[n("p",[s._v("switch: 带操作对象，case 后跟操作对象的可能值；不带操作对象，case 后面跟表达式，与 true 比较（类似 if else）")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);