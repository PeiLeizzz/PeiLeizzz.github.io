(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{502:function(t,s,a){"use strict";a.r(s);var n=a(4),e=function(t){t.options.__data__block__={mermaid_64a568a4:"graph TD\nA[Object \\java.lang\\ ]--\x3eB[AbstractCollection]\nA--\x3eC[AbstractMap]\nC--\x3eN[HashMap]--\x3eO[LinkedHashMap]\nC--\x3eP[TreeMap]\nA--不常用--\x3eQ[Dictionary]--\x3eR[Hashtable]\nB--\x3eD[AbstractList]\nB--\x3eE[AbstractSet]\nD--\x3eG[AbstractSequentialList]--\x3eH[LinkedList]\nD--\x3eI[ArrayList]\nD--\x3eJ[Vector]--\x3eK[Stack]\nE--\x3eF[Hash Set]--\x3eL[LinkedHashSet]\nE--\x3eM[TreeSet]\n\nsubgraph X[Map]\n\tR\nend\n\nsubgraph V[Map]\n\tC\n\tN\n\tO\n\tsubgraph W[SortedMap]\n\t\tP\n\tend\nend\n\nsubgraph S[Collection]\n\tB\n\tsubgraph T[List]\n\t\tD\n\t\tG\n\t\tH\n\t\tI\n\t\tJ\n\t\tK\n\tend\n\tsubgraph U[Set]\n\t\tE\n\t\tF\n\t\tL\n\t\tM\n\tend\nend\n"}},r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("数组是一个存放多个数据的容器")]),t._v(" "),a("ul",[a("li",[t._v("数据是"),a("strong",[t._v("同一种类型")])]),t._v(" "),a("li",[t._v("所有的数据是"),a("strong",[t._v("线性")]),t._v("规则排列")]),t._v(" "),a("li",[t._v("可通过"),a("strong",[t._v("位置索引")]),t._v("来快速定位访问数据")]),t._v(" "),a("li",[t._v("需明确容器的"),a("strong",[t._v("长度")]),t._v("（静态）")])]),t._v(" "),a("h3",{attrs:{id:"java-数组定义和初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-数组定义和初始化"}},[t._v("#")]),t._v(" Java 数组定义和初始化")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("int a[]; // a 还没有 new 操作，实际上是 null，也不知道内存位置")])]),t._v(" "),a("li",[t._v("✔"),a("code",[t._v("int[] b; // b 还没有 new 操作，实际上是 null，也不知道内存位置")]),t._v(" （"),a("strong",[t._v("更常用")]),t._v("）")]),t._v(" "),a("li",[t._v("✔"),a("code",[t._v("int[] c = new int[2]; // c 有 2 个元素，都是 0")])]),t._v(" "),a("li",[a("code",[t._v("int d[] = new int[]{0, 2, 4}; // d 有 3 个元素，0、2、4，同时定义和初始化")])]),t._v(" "),a("li",[a("code",[t._v("int d1[] = {1, 3, 5}; // d1 有 3 个元素，1、3、5，同时定义和初始化")])])]),t._v(" "),a("p",[a("strong",[t._v("错误示例：（声明变量时没有分配内存，不能指定大小）")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("int e[5];")])]),t._v(" "),a("li",[a("code",[t._v("int[5] f;")])]),t._v(" "),a("li",[a("code",[t._v("int[5] g = new int[5];")])]),t._v(" "),a("li",[a("code",[t._v("int h[5] = new int[5];")])])]),t._v(" "),a("h3",{attrs:{id:"数组索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组索引"}},[t._v("#")]),t._v(" 数组索引")]),t._v(" "),a("ul",[a("li",[t._v("数组的 "),a("code",[t._v("length")]),t._v(" "),a("strong",[t._v("属性")]),t._v("标识数组的长度")]),t._v(" "),a("li",[t._v("从 "),a("code",[t._v("0")]),t._v(" 开始，到 "),a("code",[t._v("length - 1")])]),t._v(" "),a("li",[a("code",[t._v("int[] a = new int[5]; // a[0] ~ a[4], not a[5]; a.length 是 5")])]),t._v(" "),a("li",[t._v("数组不能越界访问，否则会报 "),a("code",[t._v("ArrayIndexOutOfBoundsException")]),t._v(" 异常")])]),t._v(" "),a("h3",{attrs:{id:"数组遍历：两种方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组遍历：两种方法"}},[t._v("#")]),t._v(" 数组遍历：两种方法")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要自己控制索引位置（注意 length 是属性而不是方法）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无需控制索引位置（Java 5.0 及以上）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"多维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[t._v("#")]),t._v(" 多维数组")]),t._v(" "),a("ul",[a("li",[t._v("存储是按照"),a("strong",[t._v("行存储")]),t._v("原则")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不规则数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n输出：\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("h2",{attrs:{id:"jcf（容器框架）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jcf（容器框架）"}},[t._v("#")]),t._v(" "),a("code",[t._v("JCF")]),t._v("（容器框架）")]),t._v(" "),a("h3",{attrs:{id:"概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("ul",[a("li",[t._v("容器：能够存放数据的空间结构\n"),a("ul",[a("li",[t._v("数组/多维数组，只能"),a("strong",[t._v("线性")]),t._v("存放")]),t._v(" "),a("li",[t._v("列表/散列集/树/……")])])]),t._v(" "),a("li",[t._v("容器框架：为表示和操作容器而规定的一种标准体系结构\n"),a("ul",[a("li",[t._v("对外的接口：容器中所能存放的抽象数据类型")]),t._v(" "),a("li",[t._v("接口的实现：可复用的数据结构")]),t._v(" "),a("li",[t._v("算法: 对数据的查找和排序")])])]),t._v(" "),a("li",[t._v("容器框架优点：提高数据存取效率，避免程序员重复劳动")]),t._v(" "),a("li",[a("code",[t._v("C++")]),t._v(" 的 "),a("code",[t._v("STL")]),t._v("，"),a("code",[t._v("Java")]),t._v(" 的 "),a("code",[t._v("JCF")])])]),t._v(" "),a("h3",{attrs:{id:"发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发展历史"}},[t._v("#")]),t._v(" 发展历史")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Java 1.1")]),t._v(" 和以前的数据结构\n"),a("ul",[a("li",[a("code",[t._v("Vector, Stack, Hashtable, Enumeration")]),t._v(" 等")])])]),t._v(" "),a("li",[a("code",[t._v("Java 1.2")]),t._v(" 和以后，"),a("strong",[a("code",[t._v("JCF")]),t._v(" 集合框架")]),t._v(" "),a("ul",[a("li",[t._v("功能更强大")]),t._v(" "),a("li",[t._v("易于学习")]),t._v(" "),a("li",[t._v("接口和实现分离，多种设计模式设计更灵活")]),t._v(" "),a("li",[t._v("泛型设计")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("JCF：Java Collection Framework")])]),t._v(" "),a("h3",{attrs:{id:"jcf-数据结构概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jcf-数据结构概览"}},[t._v("#")]),t._v(" "),a("code",[t._v("JCF")]),t._v(" 数据结构概览")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_64a568a4",graph:t.$dataBlock.mermaid_64a568a4}}),a("blockquote",[a("p",[t._v("我们主要关注图中的 "),a("code",[t._v("List, Set, Map")])]),t._v(" "),a("p",[t._v("还有两个工具(算法)类 "),a("code",[t._v("Arrays")]),t._v(" 和 "),a("code",[t._v("Collections")])])]),t._v(" "),a("h3",{attrs:{id:"jcf-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jcf-接口"}},[t._v("#")]),t._v(" JCF 接口")]),t._v(" "),a("ul",[a("li",[t._v("早期接口 "),a("code",[t._v("Enumeration")])]),t._v(" "),a("li",[t._v("JCF 的集合接口是 "),a("code",[t._v("Collection")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("add, contains, remove, size")])]),t._v(" "),a("li",[a("code",[t._v("iterator")])])])]),t._v(" "),a("li",[t._v("JCF 的迭代器接口 "),a("code",[t._v("Iterator")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hasNext")]),t._v(" 判断是否有下一个元素")]),t._v(" "),a("li",[a("code",[t._v("next")])]),t._v(" "),a("li",[a("code",[t._v("remove")])])])])]),t._v(" "),a("h3",{attrs:{id:"jcf-中的主要类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jcf-中的主要类"}},[t._v("#")]),t._v(" JCF 中的主要类")]),t._v(" "),a("ul",[a("li",[t._v("JCF 主要的数据结构实现类\n"),a("ul",[a("li",[t._v("列表("),a("code",[t._v("List, ArrayList, LinkedList")]),t._v(")")]),t._v(" "),a("li",[t._v("集合("),a("code",[t._v("Set, HashSet, TreeSet, LinkedHashSet")]),t._v(")")]),t._v(" "),a("li",[t._v("映射("),a("code",[t._v("Map, HashMap, TreeMap, LinkedHashMap")]),t._v(")")])])]),t._v(" "),a("li",[t._v("JCF 主要的算法类\n"),a("ul",[a("li",[a("code",[t._v("Arrays")]),t._v(":  对数组进行查找和排序等操作")]),t._v(" "),a("li",[a("code",[t._v("Collections")]),t._v("：对 "),a("code",[t._v("Collection")]),t._v(" 及其子类进行排序和查找操作")])])])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);s.default=r.exports}}]);