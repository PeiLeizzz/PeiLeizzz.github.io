(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{587:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_863-矩阵重叠（难度：简单-语言：c-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_863-矩阵重叠（难度：简单-语言：c-）"}},[s._v("#")]),s._v(" 863 矩阵重叠（难度：简单  语言：C++）")]),s._v(" "),a("h2",{attrs:{id:"_1-题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-题目"}},[s._v("#")]),s._v(" 1.题目")]),s._v(" "),a("p",[s._v("矩形以列表 "),a("code",[s._v("[x1, y1, x2, y2]")]),s._v(" 的形式表示，其中 "),a("code",[s._v("(x1, y1)")]),s._v(" 为左下角的坐标，"),a("code",[s._v("(x2, y2)")]),s._v(" 是右上角的坐标。")]),s._v(" "),a("p",[s._v("如果相交的面积为正，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。")]),s._v(" "),a("p",[s._v("给出两个矩形，判断它们是否重叠并返回结果。")]),s._v(" "),a("h2",{attrs:{id:"_2-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-示例"}},[s._v("#")]),s._v(" 2.示例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：rec1 = [0,0,2,2], rec2 = [1,1,3,3] \n输出：true \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：rec1 = [0,0,1,1], rec2 = [1,0,2,1]\n输出：false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_3-提示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-提示"}},[s._v("#")]),s._v(" 3.提示")]),s._v(" "),a("ol",[a("li",[s._v("两个矩形 "),a("code",[s._v("rec1")]),s._v(" 和 "),a("code",[s._v("rec2")]),s._v(" 都以含有四个整数的列表的形式给出。")]),s._v(" "),a("li",[s._v("矩形中的所有坐标都处于 "),a("code",[s._v("-10^9")]),s._v(" 和 "),a("code",[s._v("10^9")]),s._v(" 之间。")]),s._v(" "),a("li",[a("code",[s._v("x")]),s._v(" 轴默认指向右，"),a("code",[s._v("y")]),s._v(" 轴默认指向上。")]),s._v(" "),a("li",[s._v("你可以仅考虑矩形是正放的情况。")])]),s._v(" "),a("h2",{attrs:{id:"_4-思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-思路"}},[s._v("#")]),s._v(" 4.思路")]),s._v(" "),a("p",[s._v("设两个数组中的元素分别为 "),a("code",[s._v("[x1, y1, x2, y2]")]),s._v("和"),a("code",[s._v("[x1', y1', x2', y2']")]),s._v("\n初想比较复杂，因为重叠时的状态很多，所以可以考虑不重叠的时候。\n由于题目中规定了两个坐标分别为左下角和右下角，所以不重叠一共有四种情况：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("x1 >= x2'")])]),s._v(" "),a("li",[a("code",[s._v("x2 <= x1'")])]),s._v(" "),a("li",[a("code",[s._v("y1 >= y2'")])]),s._v(" "),a("li",[a("code",[s._v("y2 <= y1'")])])]),s._v(" "),a("h2",{attrs:{id:"_5-题解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-题解"}},[s._v("#")]),s._v(" 5.题解")]),s._v(" "),a("div",{staticClass:"language-CPP line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRectangleOverlap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" rec1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" rec2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rec1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" rec2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" \n                 rec1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" rec2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" \n                 rec1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" rec2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" \n                 rec1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" rec2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);